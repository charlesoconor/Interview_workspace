'use strict'


import chai from 'chai'
import { pickProjects } from './projectPicker'

describe('Testing Line breaks', function () {
  it('simple test no overlaps', function(done) {
    const input =  [
      // [id, start, end, value]
      ['a', 1, 2, 10],
      ['b', 3, 5, 10]
    ].map(([id, startDate, endDate, value]) => ({ id, startDate, endDate, value}))

    const maxValue = pickProjects(input)
    chai.assert.equal(20, maxValue)
    done()
  })

  it('Simple should be 3', function (done) {
    const input =  [
      // [id, start, end, value]
      ['a', 1, 2, 10],
      ['b', 3, 5, 10],
      ['c', 4, 6, 15],
      ['d', 7, 10, 5],
      ['e', 8, 11, 5],
      ['f', 10, 12, 10],
      ['g', 13, 14, 5],
      ['h', 13, 14, 5]
    ].map(([id, startDate, endDate, value]) => ({ id, startDate, endDate, value}))

    const maxValue = pickProjects(input)
    chai.assert.equal(40, maxValue)

    done()
  })

  it('Simple should be 3', function (done) {
    const input =  [
      ['0', 4, 6, 32.26],
      ['1', 32, 36, 27.98],
      ['2', 1, 29, 39.53],
      ['3', 13, 20, 16.51],
      ['4', 23, 32, 70.23],
      ['5', 6, 45, 23.16],
      ['6', 9, 17, 48.99],
      ['7', 24, 31, 31.62],
      ['8', 3, 40, 44.02],
      ['9', 0, 16, 30.7],
      ['10', 46, 48, 10.41],
      ['11', 26, 28, 17.46],
      ['12', 4, 37, 73.28],
      ['13', 17, 41, 65.28],
      ['14', 34, 47, 14.89],
      ['15', 36, 37, 11.85],
      ['16', 4, 16, 20.84],
      ['17', 40, 43, 29.04],
      ['18', 16, 46, 68.48],
      ['19', 18, 22, 57.62],
      ['20', 24, 42, 50.88],
      ['21', 3, 26, 57.51],
      ['22', 43, 49, 48.27],
      ['23', 35, 36, 29.93],
      ['24', 0, 4, 31.19],
      ['25', 7, 31, 37.2],
      ['26', 10, 24, 76.44],
      ['27', 15, 30, 27.86],
      ['28', 6, 26, 43.13],
      ['29', 10, 18, 64.2],
      ['30', 45, 49, 29.4],
      ['31', 7, 28, 62.62],
      ['32', 22, 45, 51.16],
      ['33', 28, 49, 57.34],
      ['34', 32, 38, 2.92],
      ['35', 14, 46, 49.08],
      ['36', 14, 18, 41.08],
      ['37', 9, 40, 14.78],
      ['38', 16, 24, 28.8],
      ['39', 20, 22, 65.6],
      ['40', 37, 43, 40.56],
      ['41', 26, 28, 9.46],
      ['42', 28, 41, 27.82],
      ['43', 2, 45, 45.38],
      ['44', 15, 39, 46.66],
      ['45', 7, 44, 65.44],
      ['46', 41, 47, 57.57],
      ['47', 21, 30, 19.99],
      ['48', 7, 34, 54.46],
      ['49', 36, 48, 7.53],
      ['50', 8, 26, 18.5],
      ['51', 1, 24, 62.0],
      ['52', 40, 49, 75.59],
      ['53', 8, 17, 45.78],
      ['54', 8, 49, 72.03],
      ['55', 29, 30, 19.35],
      ['56', 40, 43, 16.73],
      ['57', 19, 27, 37.07],
      ['58', 16, 39, 10.05],
      ['59', 31, 48, 83.7],
      ['60', 28, 32, 12.54],
      ['61', 1, 20, 49.04],
      ['62', 17, 49, 91.62],
      ['63', 27, 48, 67.32],
      ['64', 6, 22, 38.17],
      ['65', 20, 31, 14.76],
      ['66', 9, 23, 37.84],
      ['67', 0, 12, 46.56],
      ['68', 38, 43, 57.82],
      ['69', 28, 36, 28.06],
      ['70', 20, 46, 19.29],
      ['71', 12, 33, 45.91],
      ['72', 12, 38, 58.26],
      ['73', 7, 45, 43.81],
      ['74', 20, 28, 36.13],
      ['75', 16, 42, 22.58],
      ['76', 5, 6, 67.4],
      ['77', 1, 22, 32.79],
      ['78', 0, 19, 37.89],
      ['79', 19, 48, 32.49],
      ['80', 20, 23, 18.95],
      ['81', 10, 49, 73.33],
      ['82', 1, 18, 46.75],
      ['83', 33, 46, 32.14],
      ['84', 10, 38, 68.42],
      ['85', 8, 27, 47.74],
      ['86', 12, 32, 58.29],
      ['87', 26, 39, 81.26],
      ['88', 15, 37, 10.17],
      ['89', 2, 5, 40.99],
      ['90', 4, 22, 69.34],
      ['91', 0, 29, 59.15],
      ['92', 17, 18, 60.78],
      ['93', 13, 37, 53.84],
      ['94', 11, 39, 69.23],
      ['95', 4, 20, 46.23],
      ['96', 9, 45, 87.21],
      ['97', 20, 44, 75.88],
      ['98', 16, 32, 21.22],
      ['99', 35, 38, 78.71],
      ['100', 14, 42, 63.25],
      ['101', 6, 32, 27.76],
      ['102', 31, 34, 13.77],
      ['103', 17, 23, 50.87],
      ['104', 27, 47, 14.68],
      ['105', 46, 49, 21.67],
      ['106', 44, 47, 37.83],
      ['107', 1, 17, 21.25],
      ['108', 11, 23, 52.63],
      ['109', 36, 45, 58.0],
      ['110', 13, 38, 51.42],
      ['111', 6, 8, 33.56],
      ['112', 6, 36, 54.54],
      ['113', 29, 46, 50.11],
      ['114', 1, 5, 15.61],
      ['115', 3, 29, 52.2],
      ['116', 1, 40, 75.51],
      ['117', 11, 14, 62.69],
      ['118', 7, 38, 39.82],
      ['119', 1, 47, 33.8],
      ['120', 22, 46, 55.54],
      ['121', 3, 43, 46.6],
      ['122', 21, 40, 44.53],
      ['123', 8, 36, 68.88],
      ['124', 1, 12, 49.19]
    ].map(([id, startDate, endDate, value]) => ({ id, startDate, endDate, value}))

    const maxValue = pickProjects(input)
    chai.assert.equal(512.19, maxValue)

    done()
  })
})
